//这里是收银系统前面7节课的数据，作为备份使用！
 <template>
   <div class="pos">
     <el-row>
       <el-col :span="7" class="pos-order" id="order-list">
         <el-tabs v-model="activeName" @tab-click="handleClick">
           <el-tab-pane label="点餐" name="first">
             <el-table :data="tableData" border style="width:100%;color: black;">
               <el-table-column prop="goodsName" label="商品名字"></el-table-column>
               <el-table-column prop="count" label="数量"></el-table-column>
               <el-table-column prop="price" label="金额"></el-table-column>
               <el-table-column label="操作" fixed="right">
                 <template scope="scope">
                   <el-button type="text" size="small">删除</el-button>
                   <el-button type="text" size="small">增加</el-button>
                 </template>
               </el-table-column>
             </el-table>
             <div class="div-btn">
               <el-button type="warning">挂单</el-button>
               <el-button type="danger">删除</el-button>
               <el-button type="success">结账</el-button>
             </div>

           </el-tab-pane>
           <el-tab-pane label="挂单" name="second">

           </el-tab-pane>
           <el-tab-pane label="外卖" name="third">

           </el-tab-pane>
         </el-tabs>
       </el-col>
       <el-col :span="17">
         <div class="often-goods">
           <div class="title">常用商品</div>
           <div class="often-goods-list">
             <ul>
               <li v-for="goods in oftenGoods">
                 <span>{{goods.goodsName}}</span>
                 <span class="o-price">￥{{goods.price}}</span>
               </li>
             </ul>
           </div>
         </div>

         <div class="goods-type">
           <el-tabs>
             <el-tab-pane label="汉堡">
               <ul class="cookList">
                 <li v-for="goods in type0Goods">
                   <span class="foodImg"><img :src="goods.goodsImg" width="100%"></span>
                   <span class="foodName">{{goods.goodsName}}</span>
                   <span class="foodPrice">￥{{goods.price}}元</span>
                 </li>
               </ul>
             </el-tab-pane>
             <el-tab-pane label="小食">小食</el-tab-pane>
             <el-tab-pane label="饮料">饮料</el-tab-pane>
             <el-tab-pane label="套餐">套餐</el-tab-pane>
           </el-tabs>
         </div>
       </el-col>
     </el-row>
   </div>
 </template>
 <script>
   import ElTabPane from "../../../node_modules/element-ui/packages/tabs/src/tab-pane.vue";

   export default {
     components: {ElTabPane},
     name: 'pos',
     data() {
       return {
         activeName: 'first',
         tableData: [
           {
             goodsName: '可口可乐',
             price: '8',
             count: 1
           },
           {
             goodsName: '香辣鸡翅',
             price: '16',
             count: 1
           },
           {
             goodsName: '爱心薯条',
             price: '8',
             count: 1
           },
           {
             goodsName: '甜筒',
             price: '8',
             count: 1
           }
         ],
         oftenGoods: [
           {
             goodsId: 1,
             goodsName: '香辣鸡腿堡',
             price: 18
           }, {
             goodsId: 2,
             goodsName: '田园鸡腿堡',
             price: 15
           }, {
             goodsId: 3,
             goodsName: '和风汉堡',
             price: 15
           }, {
             goodsId: 4,
             goodsName: '快乐全家桶',
             price: 80
           }, {
             goodsId: 5,
             goodsName: '脆皮炸鸡腿',
             price: 10
           }, {
             goodsId: 6,
             goodsName: '魔法鸡块',
             price: 20
           }, {
             goodsId: 7,
             goodsName: '可乐大杯',
             price: 10
           }, {
             goodsId: 8,
             goodsName: '雪顶咖啡',
             price: 18
           }, {
             goodsId: 9,
             goodsName: '大块鸡米花',
             price: 15
           }, {
             goodsId: 20,
             goodsName: '香脆鸡柳',
             price: 17
           }
         ],
         type0Goods: [
           {
             goodsId: 1,
             goodsImg: "http://7xjyw1.com1.z0.glb.clouddn.com/pos001.jpg",
             goodsName: '香辣鸡腿堡',
             price: 18
           }, {
             goodsId: 2,
             goodsImg: "http://7xjyw1.com1.z0.glb.clouddn.com/pos002.jpg",
             goodsName: '田园鸡腿堡',
             price: 15
           }, {
             goodsId: 3,
             goodsImg: "http://7xjyw1.com1.z0.glb.clouddn.com/pos004.jpg",
             goodsName: '和风汉堡',
             price: 15
           }, {
             goodsId: 4,
             goodsImg: "http://7xjyw1.com1.z0.glb.clouddn.com/pos003.jpg",
             goodsName: '快乐全家桶',
             price: 80
           }, {
             goodsId: 5,
             goodsImg: "http://7xjyw1.com1.z0.glb.clouddn.com/pos003.jpg",
             goodsName: '脆皮炸鸡腿',
             price: 10
           }, {
             goodsId: 6,
             goodsImg: "http://7xjyw1.com1.z0.glb.clouddn.com/pos004.jpg",
             goodsName: '魔法鸡块',
             price: 20
           }, {
             goodsId: 7,
             goodsImg: "http://7xjyw1.com1.z0.glb.clouddn.com/pos001.jpg",
             goodsName: '可乐大杯',
             price: 10
           }, {
             goodsId: 8,
             goodsImg: "http://7xjyw1.com1.z0.glb.clouddn.com/pos003.jpg",
             goodsName: '雪顶咖啡',
             price: 18
           }, {
             goodsId: 9,
             goodsImg: "http://7xjyw1.com1.z0.glb.clouddn.com/pos002.jpg",
             goodsName: '大块鸡米花',
             price: 15
           }, {
             goodsId: 20,
             goodsImg: "http://7xjyw1.com1.z0.glb.clouddn.com/pos002.jpg",
             goodsName: '香脆鸡柳',
             price: 17
           }
         ],
       };
     },
     methods: {
       handleClick(tab, event) {
         console.log(tab, event);
       }
     },
     /*
     element是虚拟的，所以需要在所有的虚拟dom都加载完成后，才能在钩子里写这个。
     mounted：当所有的虚拟dom都加载完成之后，这里面实行的是什么？
     用javaScript原生的方法给.pos-order设置高度。
      */
     mounted: function () {
       var orderHeiht = document.body.clientHeight;
       console.log(orderHeiht);
       document.getElementById('order-list').style.height = orderHeiht + 'px';
     }
   }
 </script>
 <!--scoped:是局部变量-->
 <style>
   .pos-order {
     background: #f9fafc;
     border-right: 1px solid #c0ccda;
     padding-left: 20px;
   }

   .div-btn {
     margin-top: 15px;
   }

   /*
   这是右边的部分
    */
   .title {
     height: 20px;
     border-bottom: 1px solid #d3dce6;
     background: #f9fafc;
     padding: 10px;
     text-align: left;
   }

   .often-goods-list ul li {
     list-style: none;
     float: left;
     border: 1px solid lightskyblue;
     padding: 10px;
     margin: 10px;
     background: #fff;
   }

   .o-price {
     color: #5887ff;
   }

   .goods-type {
     clear: both;
     padding-left: 15px;
   }

   .cookList li {
     list-style: none;
     width: 23%;
     border: 1px solid #E5E9F2;
     height: auot;
     overflow: hidden;
     background-color: #fff;
     padding: 2px;
     float: left;
     margin: 2px;

   }

   .cookList li span {

     display: block;
     float: left;
   }

   .foodImg {
     width: 40%;
   }

   .foodName {
     font-size: 18px;
     padding-left: 10px;
     color: brown;

   }

   .foodPrice {
     font-size: 16px;
     padding-left: 10px;
     padding-top: 10px;
   }
 </style>
